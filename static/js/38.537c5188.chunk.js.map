{"version":3,"file":"static/js/38.537c5188.chunk.js","mappings":"8TAce,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACE,UAAC,IAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACE,SAAC,KAAD,KACA,UAAC,IAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAAC,IAAD,CAAQJ,GAAI,CAAEK,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAAC,IAAD,OAEF,SAAC,IAAD,CAAYR,UAAU,KAAKS,QAAQ,KAAnC,SAAwC,YAGxC,UAAC,IAAD,CAAKT,UAAU,OAAOU,SA7BP,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACfhB,GACEiB,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGrCL,EAAKO,OACN,EAmBmDC,YAAU,EAACnB,GAAI,CAAEoB,GAAI,GAAnE,WACE,SAAC,IAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,KAEX,SAAC,IAAD,CACEP,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNI,KAAK,WACLL,GAAG,WACHG,aAAa,sBAEf,SAAC,IAAD,CACEE,KAAK,SACLN,WAAS,EACThB,QAAQ,YACRP,GAAI,CAAEoB,GAAI,EAAGU,GAAI,GAJnB,SAKC,YAGD,SAAC,KAAD,CAAMC,WAAS,EAAf,UACE,SAAC,KAAD,CAAMC,MAAI,EAAV,UACE,SAAC,IAAD,CAAYzB,QAAQ,QAApB,UACE,SAAC,KAAD,CAAS0B,UAAU,GAAGC,GAAG,UAAzB,SACG,iDASlB,C","sources":["pages/Login.jsx"],"sourcesContent":["import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/authorisation/operations'; // Corrected the typo here\nimport { NavLink } from 'react-router-dom';\n\nexport default function Login() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Log In\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Log In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Typography variant=\"body2\">\n                <NavLink className=\"\" to=\"/signup\">\n                  {\"Don't have an account? Sign Up\"}\n                </NavLink>\n              </Typography>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n"],"names":["Login","dispatch","useDispatch","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","variant","onSubmit","e","preventDefault","form","target","logIn","email","elements","value","password","reset","noValidate","mt","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","mb","container","item","className","to"],"sourceRoot":""}